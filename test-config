# !/bin/bash -x
if [ "$1" = "?" ]
	then
		B1="\033[1m";
		B2="\033[0m";
		echo -e "${B1}More info${B2}";
		echo -e "https://github.com/hankpillow/ftp-tools";
		echo -e "";
		exit 1;
fi

function test {

	local config=$(echo `pwd`)"/remote.cfg"
	local expected=("host" "port" "user" "root" "bind")
	local init_envs=("[stage]" "[prod]")

	function validate {

		local found=0;

		for prop in "${expected[@]}"
		do
			for cprop in $(echo -e "$config_props" | tr "\t" "\n")
			do
				found=0
				if [ "$cprop" == "$prop" ]
				then
					found=1
					value=$(. "$dirname/parse-config" $config $input "$cprop")
					echo -e "\033[32m ✔ \033[0m$cprop = $value"
					eval export "${cprop}=$value"
					break
				fi
			done
			if [ "$found" -eq "0" ]
			then
				echo -e "\033[31m✘ \033[0m Missing property '$prop'."
				exit 1;
			fi
		done
	}

	if [ -e "$config" ]
	then

		local dirname=`dirname $0`
		local envs=$(. "$dirname/parse-config" $config)

		if [ -z "$envs" ];
			then
			echo -e "\033[31mERROR:\033[0m Fill the $config properly."
			exit 0;
		fi

		envs_arr=($(echo -e "$envs" | awk '{print $0 }'))

		echo -e "\033[33mFollowing all related groups:\033[0m"
		echo -e "$(echo "$envs" | tr "\t" ", ")"
		echo -n "* Pick a group name: "
		read input;

		if [ -z "$input" ]
			then
			echo -e "\033[31mbye!\033[0m"
			exit 0
		fi

		for (( i = 0 ; i < ${#envs_arr[@]} ; i++ ))
		do
			found=$(echo ${envs_arr[$i]} | grep -E "$input")

			if [ -n "$found" ];
			then
				echo -e "\033[32m✔\033[0m $input"
				local config_props=$(. "$dirname/parse-config" $config $input)
				validate
				param_port=""
				if [ "$port" != "" ];
					then
					param_port="-p $port"

				fi
				break;
			fi

		done

		if [ -z "$found" ];
		then
			echo -e "\033[31m[$input] not found!\033[0m"
			exit 1;
		fi

	else

		echo -e "\033[32m$config\033[0m created!"
		echo -e "More info: \033[33mhttps://github.com/hankpillow/ftp-tools\033[0m"

		for env_name in "${init_envs[@]}"
		do
			echo $env_name >> $config
			for prop in "${expected[@]}"
			do
				echo $prop= >> $config
			done
			echo "" >> $config
		done
		exit 1;
	fi
}

test $@